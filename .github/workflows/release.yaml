name: Release
description: Create new tag/release and merge pull request

on:
  workflow_dispatch:
    inputs:
      final_release:
        description: 'Final release (not draft)'
        type: boolean
        default: true
      publish:
        description: 'Publish to pkg.go.dev'
        type: boolean
        default: false
      def_bump_type:
        description: 'Default bump (if cannot be calculated)'
        type: choice
        options: 
        - patch
        - minor
        - major
        - false
        required: true
        default: patch

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Run Tests
        run: go test ./...

  tag-and-release:
    name: Tag and Release
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: get_branch

      - name: Merge
        if: steps.get_branch.outputs.branch != 'main'
        uses: devmasx/merge-branch@master
        with:
          type: now
          target_branch: main
          message: Merge branch '${{ steps.get_branch.outputs.branch }}'
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          default_bump: ${{ github.event.inputs.def_bump_type }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          draft: ${{ github.event.inputs.final_release != 'true' }}
          generateReleaseNotes: true

      - name: Publish Release
        if: ${{ github.event.inputs.publish == 'true' }}
        run: GOPROXY=proxy.golang.org go list -m ${{ github.server_url }}/${{ github.repository }}@${{ steps.tag_version.outputs.new_tag }}
